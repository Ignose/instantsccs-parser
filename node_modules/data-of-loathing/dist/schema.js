"use strict";
// @ts-nocheck
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.isItemModifiersEdge = exports.isItemModifiersConnection = exports.isFoldGroupsEdge = exports.isFoldGroupsConnection = exports.isFamiliarModifiersEdge = exports.isFamiliarModifiersConnection = exports.isEquipmentEdge = exports.isEquipmentConnection = exports.isEffectsEdge = exports.isEffectsConnection = exports.isEffectModifiersEdge = exports.isEffect = exports.isEffectModifier = exports.isEffectModifiersConnection = exports.isConsumablesEdge = exports.isItemModifier = exports.isFoldablesEdge = exports.isFoldGroup = exports.isFoldable = exports.isFoldablesConnection = exports.isOutfitEquipmentsEdge = exports.isOutfitTreatsEdge = exports.isOutfitTreat = exports.isOutfitTreatsConnection = exports.isOutfit = exports.isOutfitEquipment = exports.isOutfitEquipmentsConnection = exports.isMonsterDropsEdge = exports.isNativeMonstersEdge = exports.isLocation = exports.isNativeMonster = exports.isNativeMonstersConnection = exports.isMonster = exports.isMonsterDrop = exports.isMonsterDropsConnection = exports.isFamiliarsEdge = exports.isFamiliarModifier = exports.isFamiliar = exports.isFamiliarsConnection = exports.isEquipment = exports.isItem = exports.isConsumable = exports.isConsumablesConnection = exports.isPageInfo = exports.isClassesEdge = exports.isPath = exports.isClass = exports.isClassesConnection = exports.isNode = exports.isQuery = void 0;
exports.isUpdateFoldGroupPayload = exports.isUpdateFamiliarPayload = exports.isUpdateFamiliarModifierPayload = exports.isUpdateEquipmentPayload = exports.isUpdateEffectPayload = exports.isUpdateEffectModifierPayload = exports.isUpdateConsumablePayload = exports.isUpdateClassPayload = exports.isCreateSkillPayload = exports.isCreateSkillModifierPayload = exports.isCreatePathPayload = exports.isCreateOutfitPayload = exports.isCreateOutfitTreatPayload = exports.isCreateOutfitEquipmentPayload = exports.isCreateNativeMonsterPayload = exports.isCreateMonsterPayload = exports.isCreateMonsterDropPayload = exports.isCreateMetaPayload = exports.isCreateLocationPayload = exports.isCreateItemPayload = exports.isCreateItemModifierPayload = exports.isCreateFoldablePayload = exports.isCreateFoldGroupPayload = exports.isCreateFamiliarPayload = exports.isCreateFamiliarModifierPayload = exports.isCreateEquipmentPayload = exports.isCreateEffectPayload = exports.isCreateEffectModifierPayload = exports.isCreateConsumablePayload = exports.isCreateClassPayload = exports.isMutation = exports.isSkillsEdge = exports.isSkillsConnection = exports.isSkillModifiersEdge = exports.isSkill = exports.isSkillModifier = exports.isSkillModifiersConnection = exports.isPathsEdge = exports.isPathsConnection = exports.isOutfitsEdge = exports.isOutfitsConnection = exports.isMonstersEdge = exports.isMonstersConnection = exports.isMetasEdge = exports.isMeta = exports.isMetasConnection = exports.isLocationsEdge = exports.isLocationsConnection = exports.isItemsEdge = exports.isItemsConnection = void 0;
exports.enumMonstersOrderBy = exports.enumMetasOrderBy = exports.enumLocationsOrderBy = exports.enumItemsOrderBy = exports.enumItemModifiersOrderBy = exports.enumFoldGroupsOrderBy = exports.enumFamiliarModifiersOrderBy = exports.enumEquipmentOrderBy = exports.enumEffectsOrderBy = exports.enumEffectModifiersOrderBy = exports.enumEffectQuality = exports.enumConsumablesOrderBy = exports.enumFoldablesOrderBy = exports.enumOutfitTreatsOrderBy = exports.enumOutfitEquipmentsOrderBy = exports.enumNativeMonstersOrderBy = exports.enumLocationEnvironment = exports.enumLocationDifficulty = exports.enumMonsterDropsOrderBy = exports.enumMonsterElement = exports.enumMonsterDropCategory = exports.enumFamiliarsOrderBy = exports.enumFamiliarCategory = exports.enumItemUse = exports.enumConsumableQuality = exports.enumClassesOrderBy = exports.isDeleteSkillPayload = exports.isDeleteSkillModifierPayload = exports.isDeletePathPayload = exports.isDeleteOutfitPayload = exports.isDeleteMonsterPayload = exports.isDeleteLocationPayload = exports.isDeleteItemPayload = exports.isDeleteItemModifierPayload = exports.isDeleteFoldGroupPayload = exports.isDeleteFamiliarPayload = exports.isDeleteFamiliarModifierPayload = exports.isDeleteEquipmentPayload = exports.isDeleteEffectPayload = exports.isDeleteEffectModifierPayload = exports.isDeleteConsumablePayload = exports.isDeleteClassPayload = exports.isUpdateSkillPayload = exports.isUpdateSkillModifierPayload = exports.isUpdatePathPayload = exports.isUpdateOutfitPayload = exports.isUpdateMonsterPayload = exports.isUpdateLocationPayload = exports.isUpdateItemPayload = exports.isUpdateItemModifierPayload = void 0;
exports.enumSkillsOrderBy = exports.enumSkillModifiersOrderBy = exports.enumSkillTag = exports.enumPathsOrderBy = exports.enumOutfitsOrderBy = void 0;
const Query_possibleTypes = ['Query'];
const isQuery = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isQuery"');
    return Query_possibleTypes.includes(obj.__typename);
};
exports.isQuery = isQuery;
const Node_possibleTypes = ['Query', 'Class', 'Path', 'Consumable', 'Item', 'Equipment', 'Familiar', 'FamiliarModifier', 'Monster', 'Location', 'Outfit', 'FoldGroup', 'ItemModifier', 'EffectModifier', 'Effect', 'SkillModifier', 'Skill'];
const isNode = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isNode"');
    return Node_possibleTypes.includes(obj.__typename);
};
exports.isNode = isNode;
const ClassesConnection_possibleTypes = ['ClassesConnection'];
const isClassesConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isClassesConnection"');
    return ClassesConnection_possibleTypes.includes(obj.__typename);
};
exports.isClassesConnection = isClassesConnection;
const Class_possibleTypes = ['Class'];
const isClass = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isClass"');
    return Class_possibleTypes.includes(obj.__typename);
};
exports.isClass = isClass;
const Path_possibleTypes = ['Path'];
const isPath = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isPath"');
    return Path_possibleTypes.includes(obj.__typename);
};
exports.isPath = isPath;
const ClassesEdge_possibleTypes = ['ClassesEdge'];
const isClassesEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isClassesEdge"');
    return ClassesEdge_possibleTypes.includes(obj.__typename);
};
exports.isClassesEdge = isClassesEdge;
const PageInfo_possibleTypes = ['PageInfo'];
const isPageInfo = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isPageInfo"');
    return PageInfo_possibleTypes.includes(obj.__typename);
};
exports.isPageInfo = isPageInfo;
const ConsumablesConnection_possibleTypes = ['ConsumablesConnection'];
const isConsumablesConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isConsumablesConnection"');
    return ConsumablesConnection_possibleTypes.includes(obj.__typename);
};
exports.isConsumablesConnection = isConsumablesConnection;
const Consumable_possibleTypes = ['Consumable'];
const isConsumable = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isConsumable"');
    return Consumable_possibleTypes.includes(obj.__typename);
};
exports.isConsumable = isConsumable;
const Item_possibleTypes = ['Item'];
const isItem = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isItem"');
    return Item_possibleTypes.includes(obj.__typename);
};
exports.isItem = isItem;
const Equipment_possibleTypes = ['Equipment'];
const isEquipment = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isEquipment"');
    return Equipment_possibleTypes.includes(obj.__typename);
};
exports.isEquipment = isEquipment;
const FamiliarsConnection_possibleTypes = ['FamiliarsConnection'];
const isFamiliarsConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isFamiliarsConnection"');
    return FamiliarsConnection_possibleTypes.includes(obj.__typename);
};
exports.isFamiliarsConnection = isFamiliarsConnection;
const Familiar_possibleTypes = ['Familiar'];
const isFamiliar = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isFamiliar"');
    return Familiar_possibleTypes.includes(obj.__typename);
};
exports.isFamiliar = isFamiliar;
const FamiliarModifier_possibleTypes = ['FamiliarModifier'];
const isFamiliarModifier = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isFamiliarModifier"');
    return FamiliarModifier_possibleTypes.includes(obj.__typename);
};
exports.isFamiliarModifier = isFamiliarModifier;
const FamiliarsEdge_possibleTypes = ['FamiliarsEdge'];
const isFamiliarsEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isFamiliarsEdge"');
    return FamiliarsEdge_possibleTypes.includes(obj.__typename);
};
exports.isFamiliarsEdge = isFamiliarsEdge;
const MonsterDropsConnection_possibleTypes = ['MonsterDropsConnection'];
const isMonsterDropsConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isMonsterDropsConnection"');
    return MonsterDropsConnection_possibleTypes.includes(obj.__typename);
};
exports.isMonsterDropsConnection = isMonsterDropsConnection;
const MonsterDrop_possibleTypes = ['MonsterDrop'];
const isMonsterDrop = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isMonsterDrop"');
    return MonsterDrop_possibleTypes.includes(obj.__typename);
};
exports.isMonsterDrop = isMonsterDrop;
const Monster_possibleTypes = ['Monster'];
const isMonster = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isMonster"');
    return Monster_possibleTypes.includes(obj.__typename);
};
exports.isMonster = isMonster;
const NativeMonstersConnection_possibleTypes = ['NativeMonstersConnection'];
const isNativeMonstersConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isNativeMonstersConnection"');
    return NativeMonstersConnection_possibleTypes.includes(obj.__typename);
};
exports.isNativeMonstersConnection = isNativeMonstersConnection;
const NativeMonster_possibleTypes = ['NativeMonster'];
const isNativeMonster = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isNativeMonster"');
    return NativeMonster_possibleTypes.includes(obj.__typename);
};
exports.isNativeMonster = isNativeMonster;
const Location_possibleTypes = ['Location'];
const isLocation = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isLocation"');
    return Location_possibleTypes.includes(obj.__typename);
};
exports.isLocation = isLocation;
const NativeMonstersEdge_possibleTypes = ['NativeMonstersEdge'];
const isNativeMonstersEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isNativeMonstersEdge"');
    return NativeMonstersEdge_possibleTypes.includes(obj.__typename);
};
exports.isNativeMonstersEdge = isNativeMonstersEdge;
const MonsterDropsEdge_possibleTypes = ['MonsterDropsEdge'];
const isMonsterDropsEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isMonsterDropsEdge"');
    return MonsterDropsEdge_possibleTypes.includes(obj.__typename);
};
exports.isMonsterDropsEdge = isMonsterDropsEdge;
const OutfitEquipmentsConnection_possibleTypes = ['OutfitEquipmentsConnection'];
const isOutfitEquipmentsConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isOutfitEquipmentsConnection"');
    return OutfitEquipmentsConnection_possibleTypes.includes(obj.__typename);
};
exports.isOutfitEquipmentsConnection = isOutfitEquipmentsConnection;
const OutfitEquipment_possibleTypes = ['OutfitEquipment'];
const isOutfitEquipment = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isOutfitEquipment"');
    return OutfitEquipment_possibleTypes.includes(obj.__typename);
};
exports.isOutfitEquipment = isOutfitEquipment;
const Outfit_possibleTypes = ['Outfit'];
const isOutfit = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isOutfit"');
    return Outfit_possibleTypes.includes(obj.__typename);
};
exports.isOutfit = isOutfit;
const OutfitTreatsConnection_possibleTypes = ['OutfitTreatsConnection'];
const isOutfitTreatsConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isOutfitTreatsConnection"');
    return OutfitTreatsConnection_possibleTypes.includes(obj.__typename);
};
exports.isOutfitTreatsConnection = isOutfitTreatsConnection;
const OutfitTreat_possibleTypes = ['OutfitTreat'];
const isOutfitTreat = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isOutfitTreat"');
    return OutfitTreat_possibleTypes.includes(obj.__typename);
};
exports.isOutfitTreat = isOutfitTreat;
const OutfitTreatsEdge_possibleTypes = ['OutfitTreatsEdge'];
const isOutfitTreatsEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isOutfitTreatsEdge"');
    return OutfitTreatsEdge_possibleTypes.includes(obj.__typename);
};
exports.isOutfitTreatsEdge = isOutfitTreatsEdge;
const OutfitEquipmentsEdge_possibleTypes = ['OutfitEquipmentsEdge'];
const isOutfitEquipmentsEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isOutfitEquipmentsEdge"');
    return OutfitEquipmentsEdge_possibleTypes.includes(obj.__typename);
};
exports.isOutfitEquipmentsEdge = isOutfitEquipmentsEdge;
const FoldablesConnection_possibleTypes = ['FoldablesConnection'];
const isFoldablesConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isFoldablesConnection"');
    return FoldablesConnection_possibleTypes.includes(obj.__typename);
};
exports.isFoldablesConnection = isFoldablesConnection;
const Foldable_possibleTypes = ['Foldable'];
const isFoldable = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isFoldable"');
    return Foldable_possibleTypes.includes(obj.__typename);
};
exports.isFoldable = isFoldable;
const FoldGroup_possibleTypes = ['FoldGroup'];
const isFoldGroup = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isFoldGroup"');
    return FoldGroup_possibleTypes.includes(obj.__typename);
};
exports.isFoldGroup = isFoldGroup;
const FoldablesEdge_possibleTypes = ['FoldablesEdge'];
const isFoldablesEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isFoldablesEdge"');
    return FoldablesEdge_possibleTypes.includes(obj.__typename);
};
exports.isFoldablesEdge = isFoldablesEdge;
const ItemModifier_possibleTypes = ['ItemModifier'];
const isItemModifier = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isItemModifier"');
    return ItemModifier_possibleTypes.includes(obj.__typename);
};
exports.isItemModifier = isItemModifier;
const ConsumablesEdge_possibleTypes = ['ConsumablesEdge'];
const isConsumablesEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isConsumablesEdge"');
    return ConsumablesEdge_possibleTypes.includes(obj.__typename);
};
exports.isConsumablesEdge = isConsumablesEdge;
const EffectModifiersConnection_possibleTypes = ['EffectModifiersConnection'];
const isEffectModifiersConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isEffectModifiersConnection"');
    return EffectModifiersConnection_possibleTypes.includes(obj.__typename);
};
exports.isEffectModifiersConnection = isEffectModifiersConnection;
const EffectModifier_possibleTypes = ['EffectModifier'];
const isEffectModifier = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isEffectModifier"');
    return EffectModifier_possibleTypes.includes(obj.__typename);
};
exports.isEffectModifier = isEffectModifier;
const Effect_possibleTypes = ['Effect'];
const isEffect = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isEffect"');
    return Effect_possibleTypes.includes(obj.__typename);
};
exports.isEffect = isEffect;
const EffectModifiersEdge_possibleTypes = ['EffectModifiersEdge'];
const isEffectModifiersEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isEffectModifiersEdge"');
    return EffectModifiersEdge_possibleTypes.includes(obj.__typename);
};
exports.isEffectModifiersEdge = isEffectModifiersEdge;
const EffectsConnection_possibleTypes = ['EffectsConnection'];
const isEffectsConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isEffectsConnection"');
    return EffectsConnection_possibleTypes.includes(obj.__typename);
};
exports.isEffectsConnection = isEffectsConnection;
const EffectsEdge_possibleTypes = ['EffectsEdge'];
const isEffectsEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isEffectsEdge"');
    return EffectsEdge_possibleTypes.includes(obj.__typename);
};
exports.isEffectsEdge = isEffectsEdge;
const EquipmentConnection_possibleTypes = ['EquipmentConnection'];
const isEquipmentConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isEquipmentConnection"');
    return EquipmentConnection_possibleTypes.includes(obj.__typename);
};
exports.isEquipmentConnection = isEquipmentConnection;
const EquipmentEdge_possibleTypes = ['EquipmentEdge'];
const isEquipmentEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isEquipmentEdge"');
    return EquipmentEdge_possibleTypes.includes(obj.__typename);
};
exports.isEquipmentEdge = isEquipmentEdge;
const FamiliarModifiersConnection_possibleTypes = ['FamiliarModifiersConnection'];
const isFamiliarModifiersConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isFamiliarModifiersConnection"');
    return FamiliarModifiersConnection_possibleTypes.includes(obj.__typename);
};
exports.isFamiliarModifiersConnection = isFamiliarModifiersConnection;
const FamiliarModifiersEdge_possibleTypes = ['FamiliarModifiersEdge'];
const isFamiliarModifiersEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isFamiliarModifiersEdge"');
    return FamiliarModifiersEdge_possibleTypes.includes(obj.__typename);
};
exports.isFamiliarModifiersEdge = isFamiliarModifiersEdge;
const FoldGroupsConnection_possibleTypes = ['FoldGroupsConnection'];
const isFoldGroupsConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isFoldGroupsConnection"');
    return FoldGroupsConnection_possibleTypes.includes(obj.__typename);
};
exports.isFoldGroupsConnection = isFoldGroupsConnection;
const FoldGroupsEdge_possibleTypes = ['FoldGroupsEdge'];
const isFoldGroupsEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isFoldGroupsEdge"');
    return FoldGroupsEdge_possibleTypes.includes(obj.__typename);
};
exports.isFoldGroupsEdge = isFoldGroupsEdge;
const ItemModifiersConnection_possibleTypes = ['ItemModifiersConnection'];
const isItemModifiersConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isItemModifiersConnection"');
    return ItemModifiersConnection_possibleTypes.includes(obj.__typename);
};
exports.isItemModifiersConnection = isItemModifiersConnection;
const ItemModifiersEdge_possibleTypes = ['ItemModifiersEdge'];
const isItemModifiersEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isItemModifiersEdge"');
    return ItemModifiersEdge_possibleTypes.includes(obj.__typename);
};
exports.isItemModifiersEdge = isItemModifiersEdge;
const ItemsConnection_possibleTypes = ['ItemsConnection'];
const isItemsConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isItemsConnection"');
    return ItemsConnection_possibleTypes.includes(obj.__typename);
};
exports.isItemsConnection = isItemsConnection;
const ItemsEdge_possibleTypes = ['ItemsEdge'];
const isItemsEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isItemsEdge"');
    return ItemsEdge_possibleTypes.includes(obj.__typename);
};
exports.isItemsEdge = isItemsEdge;
const LocationsConnection_possibleTypes = ['LocationsConnection'];
const isLocationsConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isLocationsConnection"');
    return LocationsConnection_possibleTypes.includes(obj.__typename);
};
exports.isLocationsConnection = isLocationsConnection;
const LocationsEdge_possibleTypes = ['LocationsEdge'];
const isLocationsEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isLocationsEdge"');
    return LocationsEdge_possibleTypes.includes(obj.__typename);
};
exports.isLocationsEdge = isLocationsEdge;
const MetasConnection_possibleTypes = ['MetasConnection'];
const isMetasConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isMetasConnection"');
    return MetasConnection_possibleTypes.includes(obj.__typename);
};
exports.isMetasConnection = isMetasConnection;
const Meta_possibleTypes = ['Meta'];
const isMeta = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isMeta"');
    return Meta_possibleTypes.includes(obj.__typename);
};
exports.isMeta = isMeta;
const MetasEdge_possibleTypes = ['MetasEdge'];
const isMetasEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isMetasEdge"');
    return MetasEdge_possibleTypes.includes(obj.__typename);
};
exports.isMetasEdge = isMetasEdge;
const MonstersConnection_possibleTypes = ['MonstersConnection'];
const isMonstersConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isMonstersConnection"');
    return MonstersConnection_possibleTypes.includes(obj.__typename);
};
exports.isMonstersConnection = isMonstersConnection;
const MonstersEdge_possibleTypes = ['MonstersEdge'];
const isMonstersEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isMonstersEdge"');
    return MonstersEdge_possibleTypes.includes(obj.__typename);
};
exports.isMonstersEdge = isMonstersEdge;
const OutfitsConnection_possibleTypes = ['OutfitsConnection'];
const isOutfitsConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isOutfitsConnection"');
    return OutfitsConnection_possibleTypes.includes(obj.__typename);
};
exports.isOutfitsConnection = isOutfitsConnection;
const OutfitsEdge_possibleTypes = ['OutfitsEdge'];
const isOutfitsEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isOutfitsEdge"');
    return OutfitsEdge_possibleTypes.includes(obj.__typename);
};
exports.isOutfitsEdge = isOutfitsEdge;
const PathsConnection_possibleTypes = ['PathsConnection'];
const isPathsConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isPathsConnection"');
    return PathsConnection_possibleTypes.includes(obj.__typename);
};
exports.isPathsConnection = isPathsConnection;
const PathsEdge_possibleTypes = ['PathsEdge'];
const isPathsEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isPathsEdge"');
    return PathsEdge_possibleTypes.includes(obj.__typename);
};
exports.isPathsEdge = isPathsEdge;
const SkillModifiersConnection_possibleTypes = ['SkillModifiersConnection'];
const isSkillModifiersConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isSkillModifiersConnection"');
    return SkillModifiersConnection_possibleTypes.includes(obj.__typename);
};
exports.isSkillModifiersConnection = isSkillModifiersConnection;
const SkillModifier_possibleTypes = ['SkillModifier'];
const isSkillModifier = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isSkillModifier"');
    return SkillModifier_possibleTypes.includes(obj.__typename);
};
exports.isSkillModifier = isSkillModifier;
const Skill_possibleTypes = ['Skill'];
const isSkill = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isSkill"');
    return Skill_possibleTypes.includes(obj.__typename);
};
exports.isSkill = isSkill;
const SkillModifiersEdge_possibleTypes = ['SkillModifiersEdge'];
const isSkillModifiersEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isSkillModifiersEdge"');
    return SkillModifiersEdge_possibleTypes.includes(obj.__typename);
};
exports.isSkillModifiersEdge = isSkillModifiersEdge;
const SkillsConnection_possibleTypes = ['SkillsConnection'];
const isSkillsConnection = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isSkillsConnection"');
    return SkillsConnection_possibleTypes.includes(obj.__typename);
};
exports.isSkillsConnection = isSkillsConnection;
const SkillsEdge_possibleTypes = ['SkillsEdge'];
const isSkillsEdge = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isSkillsEdge"');
    return SkillsEdge_possibleTypes.includes(obj.__typename);
};
exports.isSkillsEdge = isSkillsEdge;
const Mutation_possibleTypes = ['Mutation'];
const isMutation = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isMutation"');
    return Mutation_possibleTypes.includes(obj.__typename);
};
exports.isMutation = isMutation;
const CreateClassPayload_possibleTypes = ['CreateClassPayload'];
const isCreateClassPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateClassPayload"');
    return CreateClassPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateClassPayload = isCreateClassPayload;
const CreateConsumablePayload_possibleTypes = ['CreateConsumablePayload'];
const isCreateConsumablePayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateConsumablePayload"');
    return CreateConsumablePayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateConsumablePayload = isCreateConsumablePayload;
const CreateEffectModifierPayload_possibleTypes = ['CreateEffectModifierPayload'];
const isCreateEffectModifierPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateEffectModifierPayload"');
    return CreateEffectModifierPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateEffectModifierPayload = isCreateEffectModifierPayload;
const CreateEffectPayload_possibleTypes = ['CreateEffectPayload'];
const isCreateEffectPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateEffectPayload"');
    return CreateEffectPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateEffectPayload = isCreateEffectPayload;
const CreateEquipmentPayload_possibleTypes = ['CreateEquipmentPayload'];
const isCreateEquipmentPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateEquipmentPayload"');
    return CreateEquipmentPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateEquipmentPayload = isCreateEquipmentPayload;
const CreateFamiliarModifierPayload_possibleTypes = ['CreateFamiliarModifierPayload'];
const isCreateFamiliarModifierPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateFamiliarModifierPayload"');
    return CreateFamiliarModifierPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateFamiliarModifierPayload = isCreateFamiliarModifierPayload;
const CreateFamiliarPayload_possibleTypes = ['CreateFamiliarPayload'];
const isCreateFamiliarPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateFamiliarPayload"');
    return CreateFamiliarPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateFamiliarPayload = isCreateFamiliarPayload;
const CreateFoldGroupPayload_possibleTypes = ['CreateFoldGroupPayload'];
const isCreateFoldGroupPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateFoldGroupPayload"');
    return CreateFoldGroupPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateFoldGroupPayload = isCreateFoldGroupPayload;
const CreateFoldablePayload_possibleTypes = ['CreateFoldablePayload'];
const isCreateFoldablePayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateFoldablePayload"');
    return CreateFoldablePayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateFoldablePayload = isCreateFoldablePayload;
const CreateItemModifierPayload_possibleTypes = ['CreateItemModifierPayload'];
const isCreateItemModifierPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateItemModifierPayload"');
    return CreateItemModifierPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateItemModifierPayload = isCreateItemModifierPayload;
const CreateItemPayload_possibleTypes = ['CreateItemPayload'];
const isCreateItemPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateItemPayload"');
    return CreateItemPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateItemPayload = isCreateItemPayload;
const CreateLocationPayload_possibleTypes = ['CreateLocationPayload'];
const isCreateLocationPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateLocationPayload"');
    return CreateLocationPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateLocationPayload = isCreateLocationPayload;
const CreateMetaPayload_possibleTypes = ['CreateMetaPayload'];
const isCreateMetaPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateMetaPayload"');
    return CreateMetaPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateMetaPayload = isCreateMetaPayload;
const CreateMonsterDropPayload_possibleTypes = ['CreateMonsterDropPayload'];
const isCreateMonsterDropPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateMonsterDropPayload"');
    return CreateMonsterDropPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateMonsterDropPayload = isCreateMonsterDropPayload;
const CreateMonsterPayload_possibleTypes = ['CreateMonsterPayload'];
const isCreateMonsterPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateMonsterPayload"');
    return CreateMonsterPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateMonsterPayload = isCreateMonsterPayload;
const CreateNativeMonsterPayload_possibleTypes = ['CreateNativeMonsterPayload'];
const isCreateNativeMonsterPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateNativeMonsterPayload"');
    return CreateNativeMonsterPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateNativeMonsterPayload = isCreateNativeMonsterPayload;
const CreateOutfitEquipmentPayload_possibleTypes = ['CreateOutfitEquipmentPayload'];
const isCreateOutfitEquipmentPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateOutfitEquipmentPayload"');
    return CreateOutfitEquipmentPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateOutfitEquipmentPayload = isCreateOutfitEquipmentPayload;
const CreateOutfitTreatPayload_possibleTypes = ['CreateOutfitTreatPayload'];
const isCreateOutfitTreatPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateOutfitTreatPayload"');
    return CreateOutfitTreatPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateOutfitTreatPayload = isCreateOutfitTreatPayload;
const CreateOutfitPayload_possibleTypes = ['CreateOutfitPayload'];
const isCreateOutfitPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateOutfitPayload"');
    return CreateOutfitPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateOutfitPayload = isCreateOutfitPayload;
const CreatePathPayload_possibleTypes = ['CreatePathPayload'];
const isCreatePathPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreatePathPayload"');
    return CreatePathPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreatePathPayload = isCreatePathPayload;
const CreateSkillModifierPayload_possibleTypes = ['CreateSkillModifierPayload'];
const isCreateSkillModifierPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateSkillModifierPayload"');
    return CreateSkillModifierPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateSkillModifierPayload = isCreateSkillModifierPayload;
const CreateSkillPayload_possibleTypes = ['CreateSkillPayload'];
const isCreateSkillPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isCreateSkillPayload"');
    return CreateSkillPayload_possibleTypes.includes(obj.__typename);
};
exports.isCreateSkillPayload = isCreateSkillPayload;
const UpdateClassPayload_possibleTypes = ['UpdateClassPayload'];
const isUpdateClassPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isUpdateClassPayload"');
    return UpdateClassPayload_possibleTypes.includes(obj.__typename);
};
exports.isUpdateClassPayload = isUpdateClassPayload;
const UpdateConsumablePayload_possibleTypes = ['UpdateConsumablePayload'];
const isUpdateConsumablePayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isUpdateConsumablePayload"');
    return UpdateConsumablePayload_possibleTypes.includes(obj.__typename);
};
exports.isUpdateConsumablePayload = isUpdateConsumablePayload;
const UpdateEffectModifierPayload_possibleTypes = ['UpdateEffectModifierPayload'];
const isUpdateEffectModifierPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isUpdateEffectModifierPayload"');
    return UpdateEffectModifierPayload_possibleTypes.includes(obj.__typename);
};
exports.isUpdateEffectModifierPayload = isUpdateEffectModifierPayload;
const UpdateEffectPayload_possibleTypes = ['UpdateEffectPayload'];
const isUpdateEffectPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isUpdateEffectPayload"');
    return UpdateEffectPayload_possibleTypes.includes(obj.__typename);
};
exports.isUpdateEffectPayload = isUpdateEffectPayload;
const UpdateEquipmentPayload_possibleTypes = ['UpdateEquipmentPayload'];
const isUpdateEquipmentPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isUpdateEquipmentPayload"');
    return UpdateEquipmentPayload_possibleTypes.includes(obj.__typename);
};
exports.isUpdateEquipmentPayload = isUpdateEquipmentPayload;
const UpdateFamiliarModifierPayload_possibleTypes = ['UpdateFamiliarModifierPayload'];
const isUpdateFamiliarModifierPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isUpdateFamiliarModifierPayload"');
    return UpdateFamiliarModifierPayload_possibleTypes.includes(obj.__typename);
};
exports.isUpdateFamiliarModifierPayload = isUpdateFamiliarModifierPayload;
const UpdateFamiliarPayload_possibleTypes = ['UpdateFamiliarPayload'];
const isUpdateFamiliarPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isUpdateFamiliarPayload"');
    return UpdateFamiliarPayload_possibleTypes.includes(obj.__typename);
};
exports.isUpdateFamiliarPayload = isUpdateFamiliarPayload;
const UpdateFoldGroupPayload_possibleTypes = ['UpdateFoldGroupPayload'];
const isUpdateFoldGroupPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isUpdateFoldGroupPayload"');
    return UpdateFoldGroupPayload_possibleTypes.includes(obj.__typename);
};
exports.isUpdateFoldGroupPayload = isUpdateFoldGroupPayload;
const UpdateItemModifierPayload_possibleTypes = ['UpdateItemModifierPayload'];
const isUpdateItemModifierPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isUpdateItemModifierPayload"');
    return UpdateItemModifierPayload_possibleTypes.includes(obj.__typename);
};
exports.isUpdateItemModifierPayload = isUpdateItemModifierPayload;
const UpdateItemPayload_possibleTypes = ['UpdateItemPayload'];
const isUpdateItemPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isUpdateItemPayload"');
    return UpdateItemPayload_possibleTypes.includes(obj.__typename);
};
exports.isUpdateItemPayload = isUpdateItemPayload;
const UpdateLocationPayload_possibleTypes = ['UpdateLocationPayload'];
const isUpdateLocationPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isUpdateLocationPayload"');
    return UpdateLocationPayload_possibleTypes.includes(obj.__typename);
};
exports.isUpdateLocationPayload = isUpdateLocationPayload;
const UpdateMonsterPayload_possibleTypes = ['UpdateMonsterPayload'];
const isUpdateMonsterPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isUpdateMonsterPayload"');
    return UpdateMonsterPayload_possibleTypes.includes(obj.__typename);
};
exports.isUpdateMonsterPayload = isUpdateMonsterPayload;
const UpdateOutfitPayload_possibleTypes = ['UpdateOutfitPayload'];
const isUpdateOutfitPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isUpdateOutfitPayload"');
    return UpdateOutfitPayload_possibleTypes.includes(obj.__typename);
};
exports.isUpdateOutfitPayload = isUpdateOutfitPayload;
const UpdatePathPayload_possibleTypes = ['UpdatePathPayload'];
const isUpdatePathPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isUpdatePathPayload"');
    return UpdatePathPayload_possibleTypes.includes(obj.__typename);
};
exports.isUpdatePathPayload = isUpdatePathPayload;
const UpdateSkillModifierPayload_possibleTypes = ['UpdateSkillModifierPayload'];
const isUpdateSkillModifierPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isUpdateSkillModifierPayload"');
    return UpdateSkillModifierPayload_possibleTypes.includes(obj.__typename);
};
exports.isUpdateSkillModifierPayload = isUpdateSkillModifierPayload;
const UpdateSkillPayload_possibleTypes = ['UpdateSkillPayload'];
const isUpdateSkillPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isUpdateSkillPayload"');
    return UpdateSkillPayload_possibleTypes.includes(obj.__typename);
};
exports.isUpdateSkillPayload = isUpdateSkillPayload;
const DeleteClassPayload_possibleTypes = ['DeleteClassPayload'];
const isDeleteClassPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isDeleteClassPayload"');
    return DeleteClassPayload_possibleTypes.includes(obj.__typename);
};
exports.isDeleteClassPayload = isDeleteClassPayload;
const DeleteConsumablePayload_possibleTypes = ['DeleteConsumablePayload'];
const isDeleteConsumablePayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isDeleteConsumablePayload"');
    return DeleteConsumablePayload_possibleTypes.includes(obj.__typename);
};
exports.isDeleteConsumablePayload = isDeleteConsumablePayload;
const DeleteEffectModifierPayload_possibleTypes = ['DeleteEffectModifierPayload'];
const isDeleteEffectModifierPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isDeleteEffectModifierPayload"');
    return DeleteEffectModifierPayload_possibleTypes.includes(obj.__typename);
};
exports.isDeleteEffectModifierPayload = isDeleteEffectModifierPayload;
const DeleteEffectPayload_possibleTypes = ['DeleteEffectPayload'];
const isDeleteEffectPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isDeleteEffectPayload"');
    return DeleteEffectPayload_possibleTypes.includes(obj.__typename);
};
exports.isDeleteEffectPayload = isDeleteEffectPayload;
const DeleteEquipmentPayload_possibleTypes = ['DeleteEquipmentPayload'];
const isDeleteEquipmentPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isDeleteEquipmentPayload"');
    return DeleteEquipmentPayload_possibleTypes.includes(obj.__typename);
};
exports.isDeleteEquipmentPayload = isDeleteEquipmentPayload;
const DeleteFamiliarModifierPayload_possibleTypes = ['DeleteFamiliarModifierPayload'];
const isDeleteFamiliarModifierPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isDeleteFamiliarModifierPayload"');
    return DeleteFamiliarModifierPayload_possibleTypes.includes(obj.__typename);
};
exports.isDeleteFamiliarModifierPayload = isDeleteFamiliarModifierPayload;
const DeleteFamiliarPayload_possibleTypes = ['DeleteFamiliarPayload'];
const isDeleteFamiliarPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isDeleteFamiliarPayload"');
    return DeleteFamiliarPayload_possibleTypes.includes(obj.__typename);
};
exports.isDeleteFamiliarPayload = isDeleteFamiliarPayload;
const DeleteFoldGroupPayload_possibleTypes = ['DeleteFoldGroupPayload'];
const isDeleteFoldGroupPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isDeleteFoldGroupPayload"');
    return DeleteFoldGroupPayload_possibleTypes.includes(obj.__typename);
};
exports.isDeleteFoldGroupPayload = isDeleteFoldGroupPayload;
const DeleteItemModifierPayload_possibleTypes = ['DeleteItemModifierPayload'];
const isDeleteItemModifierPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isDeleteItemModifierPayload"');
    return DeleteItemModifierPayload_possibleTypes.includes(obj.__typename);
};
exports.isDeleteItemModifierPayload = isDeleteItemModifierPayload;
const DeleteItemPayload_possibleTypes = ['DeleteItemPayload'];
const isDeleteItemPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isDeleteItemPayload"');
    return DeleteItemPayload_possibleTypes.includes(obj.__typename);
};
exports.isDeleteItemPayload = isDeleteItemPayload;
const DeleteLocationPayload_possibleTypes = ['DeleteLocationPayload'];
const isDeleteLocationPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isDeleteLocationPayload"');
    return DeleteLocationPayload_possibleTypes.includes(obj.__typename);
};
exports.isDeleteLocationPayload = isDeleteLocationPayload;
const DeleteMonsterPayload_possibleTypes = ['DeleteMonsterPayload'];
const isDeleteMonsterPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isDeleteMonsterPayload"');
    return DeleteMonsterPayload_possibleTypes.includes(obj.__typename);
};
exports.isDeleteMonsterPayload = isDeleteMonsterPayload;
const DeleteOutfitPayload_possibleTypes = ['DeleteOutfitPayload'];
const isDeleteOutfitPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isDeleteOutfitPayload"');
    return DeleteOutfitPayload_possibleTypes.includes(obj.__typename);
};
exports.isDeleteOutfitPayload = isDeleteOutfitPayload;
const DeletePathPayload_possibleTypes = ['DeletePathPayload'];
const isDeletePathPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isDeletePathPayload"');
    return DeletePathPayload_possibleTypes.includes(obj.__typename);
};
exports.isDeletePathPayload = isDeletePathPayload;
const DeleteSkillModifierPayload_possibleTypes = ['DeleteSkillModifierPayload'];
const isDeleteSkillModifierPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isDeleteSkillModifierPayload"');
    return DeleteSkillModifierPayload_possibleTypes.includes(obj.__typename);
};
exports.isDeleteSkillModifierPayload = isDeleteSkillModifierPayload;
const DeleteSkillPayload_possibleTypes = ['DeleteSkillPayload'];
const isDeleteSkillPayload = (obj) => {
    if (!(obj === null || obj === void 0 ? void 0 : obj.__typename))
        throw new Error('__typename is missing in "isDeleteSkillPayload"');
    return DeleteSkillPayload_possibleTypes.includes(obj.__typename);
};
exports.isDeleteSkillPayload = isDeleteSkillPayload;
exports.enumClassesOrderBy = {
    NATURAL: 'NATURAL',
    ID_ASC: 'ID_ASC',
    ID_DESC: 'ID_DESC',
    NAME_ASC: 'NAME_ASC',
    NAME_DESC: 'NAME_DESC',
    ENUM_NAME_ASC: 'ENUM_NAME_ASC',
    ENUM_NAME_DESC: 'ENUM_NAME_DESC',
    IMAGE_ASC: 'IMAGE_ASC',
    IMAGE_DESC: 'IMAGE_DESC',
    PRIME_STAT_INDEX_ASC: 'PRIME_STAT_INDEX_ASC',
    PRIME_STAT_INDEX_DESC: 'PRIME_STAT_INDEX_DESC',
    PATH_ASC: 'PATH_ASC',
    PATH_DESC: 'PATH_DESC',
    STUN_ASC: 'STUN_ASC',
    STUN_DESC: 'STUN_DESC',
    STOMACH_CAPACITY_ASC: 'STOMACH_CAPACITY_ASC',
    STOMACH_CAPACITY_DESC: 'STOMACH_CAPACITY_DESC',
    LIVER_CAPACITY_ASC: 'LIVER_CAPACITY_ASC',
    LIVER_CAPACITY_DESC: 'LIVER_CAPACITY_DESC',
    SPLEEN_CAPACITY_ASC: 'SPLEEN_CAPACITY_ASC',
    SPLEEN_CAPACITY_DESC: 'SPLEEN_CAPACITY_DESC',
    PRIMARY_KEY_ASC: 'PRIMARY_KEY_ASC',
    PRIMARY_KEY_DESC: 'PRIMARY_KEY_DESC'
};
exports.enumConsumableQuality = {
    EPIC: 'EPIC',
    AWESOME: 'AWESOME',
    CHANGING: 'CHANGING',
    CRAPPY: 'CRAPPY',
    DECENT: 'DECENT',
    DRIPPY: 'DRIPPY',
    GOOD: 'GOOD',
    NONE: 'NONE',
    QUEST: 'QUEST',
    SUPER_EPIC: 'SUPER_EPIC',
    SUPER_ULTRA_EPIC: 'SUPER_ULTRA_EPIC',
    SUPER_ULTRA_MEGA_EPIC: 'SUPER_ULTRA_MEGA_EPIC',
    SUPER_ULTRA_MEGA_TURBO_EPIC: 'SUPER_ULTRA_MEGA_TURBO_EPIC'
};
exports.enumItemUse = {
    ACCESSORY: 'ACCESSORY',
    AVATAR: 'AVATAR',
    BOOTSKIN: 'BOOTSKIN',
    BOOTSPUR: 'BOOTSPUR',
    BOUNTY: 'BOUNTY',
    CANDY: 'CANDY',
    CANDY1: 'CANDY1',
    CANDY2: 'CANDY2',
    CARD: 'CARD',
    CHOCOLATE: 'CHOCOLATE',
    COMBAT: 'COMBAT',
    COMBAT_REUSABLE: 'COMBAT_REUSABLE',
    CONTAINER: 'CONTAINER',
    COOK: 'COOK',
    CURSE: 'CURSE',
    DRINK: 'DRINK',
    DRINK_HELPER: 'DRINK_HELPER',
    FAMILIAR: 'FAMILIAR',
    FANCY: 'FANCY',
    FOLDER: 'FOLDER',
    FOOD: 'FOOD',
    FOOD_HELPER: 'FOOD_HELPER',
    GROW: 'GROW',
    GUARDIAN: 'GUARDIAN',
    HAT: 'HAT',
    MATCHABLE: 'MATCHABLE',
    MESSAGE: 'MESSAGE',
    MIX: 'MIX',
    MULTIPLE: 'MULTIPLE',
    OFFHAND: 'OFFHAND',
    PACKAGE: 'PACKAGE',
    PANTS: 'PANTS',
    PASTE: 'PASTE',
    POKEPILL: 'POKEPILL',
    POTION: 'POTION',
    REUSABLE: 'REUSABLE',
    SHIRT: 'SHIRT',
    SINGLE: 'SINGLE',
    SIXGUN: 'SIXGUN',
    SMITH: 'SMITH',
    SOLO: 'SOLO',
    SPHERE: 'SPHERE',
    SPLEEN: 'SPLEEN',
    STICKER: 'STICKER',
    USABLE: 'USABLE',
    WEAPON: 'WEAPON',
    ZAP: 'ZAP'
};
exports.enumFamiliarCategory = {
    BLOCK: 'BLOCK',
    COMBAT0: 'COMBAT0',
    COMBAT1: 'COMBAT1',
    DELEVEL0: 'DELEVEL0',
    DELEVEL1: 'DELEVEL1',
    DROP: 'DROP',
    HP0: 'HP0',
    HP1: 'HP1',
    ITEM0: 'ITEM0',
    ITEM1: 'ITEM1',
    ITEM2: 'ITEM2',
    ITEM3: 'ITEM3',
    MEAT0: 'MEAT0',
    MEAT1: 'MEAT1',
    MP0: 'MP0',
    MP1: 'MP1',
    OTHER0: 'OTHER0',
    OTHER1: 'OTHER1',
    PASSIVE: 'PASSIVE',
    POKEFAM: 'POKEFAM',
    STAT0: 'STAT0',
    STAT1: 'STAT1',
    STAT2: 'STAT2',
    STAT3: 'STAT3',
    UNDERWATER: 'UNDERWATER',
    VARIABLE: 'VARIABLE'
};
exports.enumFamiliarsOrderBy = {
    NATURAL: 'NATURAL',
    ID_ASC: 'ID_ASC',
    ID_DESC: 'ID_DESC',
    NAME_ASC: 'NAME_ASC',
    NAME_DESC: 'NAME_DESC',
    IMAGE_ASC: 'IMAGE_ASC',
    IMAGE_DESC: 'IMAGE_DESC',
    CATEGORIES_ASC: 'CATEGORIES_ASC',
    CATEGORIES_DESC: 'CATEGORIES_DESC',
    LARVA_ASC: 'LARVA_ASC',
    LARVA_DESC: 'LARVA_DESC',
    EQUIPMENT_ASC: 'EQUIPMENT_ASC',
    EQUIPMENT_DESC: 'EQUIPMENT_DESC',
    CAGE_MATCH_ASC: 'CAGE_MATCH_ASC',
    CAGE_MATCH_DESC: 'CAGE_MATCH_DESC',
    SCAVENGER_HUNT_ASC: 'SCAVENGER_HUNT_ASC',
    SCAVENGER_HUNT_DESC: 'SCAVENGER_HUNT_DESC',
    OBSTACLE_COURSE_ASC: 'OBSTACLE_COURSE_ASC',
    OBSTACLE_COURSE_DESC: 'OBSTACLE_COURSE_DESC',
    HIDE_AND_SEEK_ASC: 'HIDE_AND_SEEK_ASC',
    HIDE_AND_SEEK_DESC: 'HIDE_AND_SEEK_DESC',
    ATTRIBUTES_ASC: 'ATTRIBUTES_ASC',
    ATTRIBUTES_DESC: 'ATTRIBUTES_DESC',
    PRIMARY_KEY_ASC: 'PRIMARY_KEY_ASC',
    PRIMARY_KEY_DESC: 'PRIMARY_KEY_DESC'
};
exports.enumMonsterDropCategory = {
    A: 'A',
    C: 'C',
    F: 'F',
    M: 'M',
    N: 'N',
    P: 'P'
};
exports.enumMonsterElement = {
    BAD_SPELLING: 'BAD_SPELLING',
    COLD: 'COLD',
    CUTE: 'CUTE',
    HOT: 'HOT',
    SHADOW: 'SHADOW',
    SLEAZE: 'SLEAZE',
    SLIME: 'SLIME',
    SPOOKY: 'SPOOKY',
    STENCH: 'STENCH',
    SUPERCOLD: 'SUPERCOLD'
};
exports.enumMonsterDropsOrderBy = {
    NATURAL: 'NATURAL',
    MONSTER_ASC: 'MONSTER_ASC',
    MONSTER_DESC: 'MONSTER_DESC',
    ITEM_ASC: 'ITEM_ASC',
    ITEM_DESC: 'ITEM_DESC',
    RATE_ASC: 'RATE_ASC',
    RATE_DESC: 'RATE_DESC',
    CATEGORY_ASC: 'CATEGORY_ASC',
    CATEGORY_DESC: 'CATEGORY_DESC'
};
exports.enumLocationDifficulty = {
    HIGH: 'HIGH',
    LOW: 'LOW',
    MEDIUM: 'MEDIUM',
    NONE: 'NONE',
    UNKNOWN: 'UNKNOWN'
};
exports.enumLocationEnvironment = {
    INDOOR: 'INDOOR',
    NONE: 'NONE',
    OUTDOOR: 'OUTDOOR',
    UNDERGROUND: 'UNDERGROUND',
    UNDERWATER: 'UNDERWATER'
};
exports.enumNativeMonstersOrderBy = {
    NATURAL: 'NATURAL',
    LOCATION_ASC: 'LOCATION_ASC',
    LOCATION_DESC: 'LOCATION_DESC',
    MONSTER_ASC: 'MONSTER_ASC',
    MONSTER_DESC: 'MONSTER_DESC',
    WEIGHT_ASC: 'WEIGHT_ASC',
    WEIGHT_DESC: 'WEIGHT_DESC',
    REJECTION_ASC: 'REJECTION_ASC',
    REJECTION_DESC: 'REJECTION_DESC',
    PARITY_ASC: 'PARITY_ASC',
    PARITY_DESC: 'PARITY_DESC'
};
exports.enumOutfitEquipmentsOrderBy = {
    NATURAL: 'NATURAL',
    OUTFIT_ASC: 'OUTFIT_ASC',
    OUTFIT_DESC: 'OUTFIT_DESC',
    EQUIPMENT_ASC: 'EQUIPMENT_ASC',
    EQUIPMENT_DESC: 'EQUIPMENT_DESC'
};
exports.enumOutfitTreatsOrderBy = {
    NATURAL: 'NATURAL',
    OUTFIT_ASC: 'OUTFIT_ASC',
    OUTFIT_DESC: 'OUTFIT_DESC',
    ITEM_ASC: 'ITEM_ASC',
    ITEM_DESC: 'ITEM_DESC',
    CHANCE_ASC: 'CHANCE_ASC',
    CHANCE_DESC: 'CHANCE_DESC'
};
exports.enumFoldablesOrderBy = {
    NATURAL: 'NATURAL',
    FOLD_GROUP_ASC: 'FOLD_GROUP_ASC',
    FOLD_GROUP_DESC: 'FOLD_GROUP_DESC',
    ITEM_ASC: 'ITEM_ASC',
    ITEM_DESC: 'ITEM_DESC'
};
exports.enumConsumablesOrderBy = {
    NATURAL: 'NATURAL',
    ID_ASC: 'ID_ASC',
    ID_DESC: 'ID_DESC',
    STOMACH_ASC: 'STOMACH_ASC',
    STOMACH_DESC: 'STOMACH_DESC',
    LIVER_ASC: 'LIVER_ASC',
    LIVER_DESC: 'LIVER_DESC',
    SPLEEN_ASC: 'SPLEEN_ASC',
    SPLEEN_DESC: 'SPLEEN_DESC',
    LEVEL_REQUIREMENT_ASC: 'LEVEL_REQUIREMENT_ASC',
    LEVEL_REQUIREMENT_DESC: 'LEVEL_REQUIREMENT_DESC',
    QUALITY_ASC: 'QUALITY_ASC',
    QUALITY_DESC: 'QUALITY_DESC',
    ADVENTURE_RANGE_ASC: 'ADVENTURE_RANGE_ASC',
    ADVENTURE_RANGE_DESC: 'ADVENTURE_RANGE_DESC',
    ADVENTURES_ASC: 'ADVENTURES_ASC',
    ADVENTURES_DESC: 'ADVENTURES_DESC',
    MUSCLE_ASC: 'MUSCLE_ASC',
    MUSCLE_DESC: 'MUSCLE_DESC',
    MUSCLE_RANGE_ASC: 'MUSCLE_RANGE_ASC',
    MUSCLE_RANGE_DESC: 'MUSCLE_RANGE_DESC',
    MYSTICALITY_ASC: 'MYSTICALITY_ASC',
    MYSTICALITY_DESC: 'MYSTICALITY_DESC',
    MYSTICALITY_RANGE_ASC: 'MYSTICALITY_RANGE_ASC',
    MYSTICALITY_RANGE_DESC: 'MYSTICALITY_RANGE_DESC',
    MOXIE_ASC: 'MOXIE_ASC',
    MOXIE_DESC: 'MOXIE_DESC',
    MOXIE_RANGE_ASC: 'MOXIE_RANGE_ASC',
    MOXIE_RANGE_DESC: 'MOXIE_RANGE_DESC',
    NOTES_ASC: 'NOTES_ASC',
    NOTES_DESC: 'NOTES_DESC',
    PRIMARY_KEY_ASC: 'PRIMARY_KEY_ASC',
    PRIMARY_KEY_DESC: 'PRIMARY_KEY_DESC'
};
exports.enumEffectQuality = {
    BAD: 'BAD',
    GOOD: 'GOOD',
    NEUTRAL: 'NEUTRAL'
};
exports.enumEffectModifiersOrderBy = {
    NATURAL: 'NATURAL',
    EFFECT_ASC: 'EFFECT_ASC',
    EFFECT_DESC: 'EFFECT_DESC',
    MODIFIERS_ASC: 'MODIFIERS_ASC',
    MODIFIERS_DESC: 'MODIFIERS_DESC',
    PRIMARY_KEY_ASC: 'PRIMARY_KEY_ASC',
    PRIMARY_KEY_DESC: 'PRIMARY_KEY_DESC'
};
exports.enumEffectsOrderBy = {
    NATURAL: 'NATURAL',
    ID_ASC: 'ID_ASC',
    ID_DESC: 'ID_DESC',
    NAME_ASC: 'NAME_ASC',
    NAME_DESC: 'NAME_DESC',
    DESCID_ASC: 'DESCID_ASC',
    DESCID_DESC: 'DESCID_DESC',
    IMAGE_ASC: 'IMAGE_ASC',
    IMAGE_DESC: 'IMAGE_DESC',
    QUALITY_ASC: 'QUALITY_ASC',
    QUALITY_DESC: 'QUALITY_DESC',
    NOHOOKAH_ASC: 'NOHOOKAH_ASC',
    NOHOOKAH_DESC: 'NOHOOKAH_DESC',
    NOPVP_ASC: 'NOPVP_ASC',
    NOPVP_DESC: 'NOPVP_DESC',
    NOREMOVE_ASC: 'NOREMOVE_ASC',
    NOREMOVE_DESC: 'NOREMOVE_DESC',
    SONG_ASC: 'SONG_ASC',
    SONG_DESC: 'SONG_DESC',
    ACTIONS_ASC: 'ACTIONS_ASC',
    ACTIONS_DESC: 'ACTIONS_DESC',
    AMBIGUOUS_ASC: 'AMBIGUOUS_ASC',
    AMBIGUOUS_DESC: 'AMBIGUOUS_DESC',
    PRIMARY_KEY_ASC: 'PRIMARY_KEY_ASC',
    PRIMARY_KEY_DESC: 'PRIMARY_KEY_DESC'
};
exports.enumEquipmentOrderBy = {
    NATURAL: 'NATURAL',
    ID_ASC: 'ID_ASC',
    ID_DESC: 'ID_DESC',
    POWER_ASC: 'POWER_ASC',
    POWER_DESC: 'POWER_DESC',
    MUS_REQUIREMENT_ASC: 'MUS_REQUIREMENT_ASC',
    MUS_REQUIREMENT_DESC: 'MUS_REQUIREMENT_DESC',
    MYS_REQUIREMENT_ASC: 'MYS_REQUIREMENT_ASC',
    MYS_REQUIREMENT_DESC: 'MYS_REQUIREMENT_DESC',
    MOX_REQUIREMENT_ASC: 'MOX_REQUIREMENT_ASC',
    MOX_REQUIREMENT_DESC: 'MOX_REQUIREMENT_DESC',
    TYPE_ASC: 'TYPE_ASC',
    TYPE_DESC: 'TYPE_DESC',
    HANDS_ASC: 'HANDS_ASC',
    HANDS_DESC: 'HANDS_DESC',
    PRIMARY_KEY_ASC: 'PRIMARY_KEY_ASC',
    PRIMARY_KEY_DESC: 'PRIMARY_KEY_DESC'
};
exports.enumFamiliarModifiersOrderBy = {
    NATURAL: 'NATURAL',
    FAMILIAR_ASC: 'FAMILIAR_ASC',
    FAMILIAR_DESC: 'FAMILIAR_DESC',
    MODIFIERS_ASC: 'MODIFIERS_ASC',
    MODIFIERS_DESC: 'MODIFIERS_DESC',
    PRIMARY_KEY_ASC: 'PRIMARY_KEY_ASC',
    PRIMARY_KEY_DESC: 'PRIMARY_KEY_DESC'
};
exports.enumFoldGroupsOrderBy = {
    NATURAL: 'NATURAL',
    ID_ASC: 'ID_ASC',
    ID_DESC: 'ID_DESC',
    DAMAGE_ASC: 'DAMAGE_ASC',
    DAMAGE_DESC: 'DAMAGE_DESC',
    PRIMARY_KEY_ASC: 'PRIMARY_KEY_ASC',
    PRIMARY_KEY_DESC: 'PRIMARY_KEY_DESC'
};
exports.enumItemModifiersOrderBy = {
    NATURAL: 'NATURAL',
    ITEM_ASC: 'ITEM_ASC',
    ITEM_DESC: 'ITEM_DESC',
    MODIFIERS_ASC: 'MODIFIERS_ASC',
    MODIFIERS_DESC: 'MODIFIERS_DESC',
    PRIMARY_KEY_ASC: 'PRIMARY_KEY_ASC',
    PRIMARY_KEY_DESC: 'PRIMARY_KEY_DESC'
};
exports.enumItemsOrderBy = {
    NATURAL: 'NATURAL',
    ID_ASC: 'ID_ASC',
    ID_DESC: 'ID_DESC',
    NAME_ASC: 'NAME_ASC',
    NAME_DESC: 'NAME_DESC',
    DESCID_ASC: 'DESCID_ASC',
    DESCID_DESC: 'DESCID_DESC',
    IMAGE_ASC: 'IMAGE_ASC',
    IMAGE_DESC: 'IMAGE_DESC',
    USES_ASC: 'USES_ASC',
    USES_DESC: 'USES_DESC',
    QUEST_ASC: 'QUEST_ASC',
    QUEST_DESC: 'QUEST_DESC',
    GIFT_ASC: 'GIFT_ASC',
    GIFT_DESC: 'GIFT_DESC',
    TRADEABLE_ASC: 'TRADEABLE_ASC',
    TRADEABLE_DESC: 'TRADEABLE_DESC',
    DISCARDABLE_ASC: 'DISCARDABLE_ASC',
    DISCARDABLE_DESC: 'DISCARDABLE_DESC',
    AUTOSELL_ASC: 'AUTOSELL_ASC',
    AUTOSELL_DESC: 'AUTOSELL_DESC',
    PLURAL_ASC: 'PLURAL_ASC',
    PLURAL_DESC: 'PLURAL_DESC',
    AMBIGUOUS_ASC: 'AMBIGUOUS_ASC',
    AMBIGUOUS_DESC: 'AMBIGUOUS_DESC',
    PRIMARY_KEY_ASC: 'PRIMARY_KEY_ASC',
    PRIMARY_KEY_DESC: 'PRIMARY_KEY_DESC'
};
exports.enumLocationsOrderBy = {
    NATURAL: 'NATURAL',
    ID_ASC: 'ID_ASC',
    ID_DESC: 'ID_DESC',
    NAME_ASC: 'NAME_ASC',
    NAME_DESC: 'NAME_DESC',
    ZONE_ASC: 'ZONE_ASC',
    ZONE_DESC: 'ZONE_DESC',
    URL_ASC: 'URL_ASC',
    URL_DESC: 'URL_DESC',
    DIFFICULTY_ASC: 'DIFFICULTY_ASC',
    DIFFICULTY_DESC: 'DIFFICULTY_DESC',
    ENVIRONMENT_ASC: 'ENVIRONMENT_ASC',
    ENVIRONMENT_DESC: 'ENVIRONMENT_DESC',
    STAT_REQUIREMENT_ASC: 'STAT_REQUIREMENT_ASC',
    STAT_REQUIREMENT_DESC: 'STAT_REQUIREMENT_DESC',
    WATER_LEVEL_ASC: 'WATER_LEVEL_ASC',
    WATER_LEVEL_DESC: 'WATER_LEVEL_DESC',
    OVERDRUNK_ASC: 'OVERDRUNK_ASC',
    OVERDRUNK_DESC: 'OVERDRUNK_DESC',
    NOWANDER_ASC: 'NOWANDER_ASC',
    NOWANDER_DESC: 'NOWANDER_DESC',
    COMBAT_RATE_ASC: 'COMBAT_RATE_ASC',
    COMBAT_RATE_DESC: 'COMBAT_RATE_DESC',
    PRIMARY_KEY_ASC: 'PRIMARY_KEY_ASC',
    PRIMARY_KEY_DESC: 'PRIMARY_KEY_DESC'
};
exports.enumMetasOrderBy = {
    NATURAL: 'NATURAL',
    LAST_UPDATE_ASC: 'LAST_UPDATE_ASC',
    LAST_UPDATE_DESC: 'LAST_UPDATE_DESC'
};
exports.enumMonstersOrderBy = {
    NATURAL: 'NATURAL',
    AMBIGUOUS_ASC: 'AMBIGUOUS_ASC',
    AMBIGUOUS_DESC: 'AMBIGUOUS_DESC',
    ARTICLE_ASC: 'ARTICLE_ASC',
    ARTICLE_DESC: 'ARTICLE_DESC',
    ATTACK_ASC: 'ATTACK_ASC',
    ATTACK_DESC: 'ATTACK_DESC',
    BOSS_ASC: 'BOSS_ASC',
    BOSS_DESC: 'BOSS_DESC',
    DEFENCE_ASC: 'DEFENCE_ASC',
    DEFENCE_DESC: 'DEFENCE_DESC',
    DRIPPY_ASC: 'DRIPPY_ASC',
    DRIPPY_DESC: 'DRIPPY_DESC',
    ELEMENT_ASC: 'ELEMENT_ASC',
    ELEMENT_DESC: 'ELEMENT_DESC',
    ELEMENTAL_ATTACK_ASC: 'ELEMENTAL_ATTACK_ASC',
    ELEMENTAL_ATTACK_DESC: 'ELEMENTAL_ATTACK_DESC',
    ELEMENTAL_DEFENCE_ASC: 'ELEMENTAL_DEFENCE_ASC',
    ELEMENTAL_DEFENCE_DESC: 'ELEMENTAL_DEFENCE_DESC',
    ELEMENTAL_RESISTANCE_ASC: 'ELEMENTAL_RESISTANCE_ASC',
    ELEMENTAL_RESISTANCE_DESC: 'ELEMENTAL_RESISTANCE_DESC',
    EXPERIENCE_ASC: 'EXPERIENCE_ASC',
    EXPERIENCE_DESC: 'EXPERIENCE_DESC',
    FREE_ASC: 'FREE_ASC',
    FREE_DESC: 'FREE_DESC',
    GHOST_ASC: 'GHOST_ASC',
    GHOST_DESC: 'GHOST_DESC',
    GROUP_SIZE_ASC: 'GROUP_SIZE_ASC',
    GROUP_SIZE_DESC: 'GROUP_SIZE_DESC',
    HP_ASC: 'HP_ASC',
    HP_DESC: 'HP_DESC',
    ID_ASC: 'ID_ASC',
    ID_DESC: 'ID_DESC',
    IMAGE_ASC: 'IMAGE_ASC',
    IMAGE_DESC: 'IMAGE_DESC',
    INITIATIVE_ASC: 'INITIATIVE_ASC',
    INITIATIVE_DESC: 'INITIATIVE_DESC',
    ITEM_BLOCK_CHANCE_ASC: 'ITEM_BLOCK_CHANCE_ASC',
    ITEM_BLOCK_CHANCE_DESC: 'ITEM_BLOCK_CHANCE_DESC',
    LUCKY_ASC: 'LUCKY_ASC',
    LUCKY_DESC: 'LUCKY_DESC',
    MANUEL_ASC: 'MANUEL_ASC',
    MANUEL_DESC: 'MANUEL_DESC',
    MEAT_ASC: 'MEAT_ASC',
    MEAT_DESC: 'MEAT_DESC',
    MEAT_EXPRESSION_ASC: 'MEAT_EXPRESSION_ASC',
    MEAT_EXPRESSION_DESC: 'MEAT_EXPRESSION_DESC',
    MONSTER_LEVEL_MULTIPLIER_ASC: 'MONSTER_LEVEL_MULTIPLIER_ASC',
    MONSTER_LEVEL_MULTIPLIER_DESC: 'MONSTER_LEVEL_MULTIPLIER_DESC',
    NAME_ASC: 'NAME_ASC',
    NAME_DESC: 'NAME_DESC',
    NOBANISH_ASC: 'NOBANISH_ASC',
    NOBANISH_DESC: 'NOBANISH_DESC',
    NOCOPY_ASC: 'NOCOPY_ASC',
    NOCOPY_DESC: 'NOCOPY_DESC',
    NOMANUEL_ASC: 'NOMANUEL_ASC',
    NOMANUEL_DESC: 'NOMANUEL_DESC',
    NOWANDER_ASC: 'NOWANDER_ASC',
    NOWANDER_DESC: 'NOWANDER_DESC',
    NOWISH_ASC: 'NOWISH_ASC',
    NOWISH_DESC: 'NOWISH_DESC',
    PHYLUM_ASC: 'PHYLUM_ASC',
    PHYLUM_DESC: 'PHYLUM_DESC',
    PHYSICAL_RESISTANCE_ASC: 'PHYSICAL_RESISTANCE_ASC',
    PHYSICAL_RESISTANCE_DESC: 'PHYSICAL_RESISTANCE_DESC',
    POISON_ASC: 'POISON_ASC',
    POISON_DESC: 'POISON_DESC',
    SCALING_ASC: 'SCALING_ASC',
    SCALING_DESC: 'SCALING_DESC',
    SCALING_CAP_ASC: 'SCALING_CAP_ASC',
    SCALING_CAP_DESC: 'SCALING_CAP_DESC',
    SCALING_FLOOR_ASC: 'SCALING_FLOOR_ASC',
    SCALING_FLOOR_DESC: 'SCALING_FLOOR_DESC',
    SKILL_BLOCK_CHANCE_ASC: 'SKILL_BLOCK_CHANCE_ASC',
    SKILL_BLOCK_CHANCE_DESC: 'SKILL_BLOCK_CHANCE_DESC',
    SNAKE_ASC: 'SNAKE_ASC',
    SNAKE_DESC: 'SNAKE_DESC',
    SPELL_BLOCK_CHANCE_ASC: 'SPELL_BLOCK_CHANCE_ASC',
    SPELL_BLOCK_CHANCE_DESC: 'SPELL_BLOCK_CHANCE_DESC',
    SPRINKLES_ASC: 'SPRINKLES_ASC',
    SPRINKLES_DESC: 'SPRINKLES_DESC',
    SUPERLIKELY_ASC: 'SUPERLIKELY_ASC',
    SUPERLIKELY_DESC: 'SUPERLIKELY_DESC',
    ULTRARARE_ASC: 'ULTRARARE_ASC',
    ULTRARARE_DESC: 'ULTRARARE_DESC',
    WANDERER_ASC: 'WANDERER_ASC',
    WANDERER_DESC: 'WANDERER_DESC',
    WIKI_ASC: 'WIKI_ASC',
    WIKI_DESC: 'WIKI_DESC',
    WISH_ASC: 'WISH_ASC',
    WISH_DESC: 'WISH_DESC',
    PRIMARY_KEY_ASC: 'PRIMARY_KEY_ASC',
    PRIMARY_KEY_DESC: 'PRIMARY_KEY_DESC'
};
exports.enumOutfitsOrderBy = {
    NATURAL: 'NATURAL',
    ID_ASC: 'ID_ASC',
    ID_DESC: 'ID_DESC',
    NAME_ASC: 'NAME_ASC',
    NAME_DESC: 'NAME_DESC',
    IMAGE_ASC: 'IMAGE_ASC',
    IMAGE_DESC: 'IMAGE_DESC',
    PRIMARY_KEY_ASC: 'PRIMARY_KEY_ASC',
    PRIMARY_KEY_DESC: 'PRIMARY_KEY_DESC'
};
exports.enumPathsOrderBy = {
    NATURAL: 'NATURAL',
    ID_ASC: 'ID_ASC',
    ID_DESC: 'ID_DESC',
    NAME_ASC: 'NAME_ASC',
    NAME_DESC: 'NAME_DESC',
    ENUM_NAME_ASC: 'ENUM_NAME_ASC',
    ENUM_NAME_DESC: 'ENUM_NAME_DESC',
    IMAGE_ASC: 'IMAGE_ASC',
    IMAGE_DESC: 'IMAGE_DESC',
    IS_AVATAR_ASC: 'IS_AVATAR_ASC',
    IS_AVATAR_DESC: 'IS_AVATAR_DESC',
    ARTICLE_ASC: 'ARTICLE_ASC',
    ARTICLE_DESC: 'ARTICLE_DESC',
    POINTS_PREFERENCE_ASC: 'POINTS_PREFERENCE_ASC',
    POINTS_PREFERENCE_DESC: 'POINTS_PREFERENCE_DESC',
    MAXIMUM_POINTS_ASC: 'MAXIMUM_POINTS_ASC',
    MAXIMUM_POINTS_DESC: 'MAXIMUM_POINTS_DESC',
    BUCKET_ASC: 'BUCKET_ASC',
    BUCKET_DESC: 'BUCKET_DESC',
    STOMACH_CAPACITY_ASC: 'STOMACH_CAPACITY_ASC',
    STOMACH_CAPACITY_DESC: 'STOMACH_CAPACITY_DESC',
    LIVER_CAPACITY_ASC: 'LIVER_CAPACITY_ASC',
    LIVER_CAPACITY_DESC: 'LIVER_CAPACITY_DESC',
    SPLEEN_CAPACITY_ASC: 'SPLEEN_CAPACITY_ASC',
    SPLEEN_CAPACITY_DESC: 'SPLEEN_CAPACITY_DESC',
    PRIMARY_KEY_ASC: 'PRIMARY_KEY_ASC',
    PRIMARY_KEY_DESC: 'PRIMARY_KEY_DESC'
};
exports.enumSkillTag = {
    COMBAT: 'COMBAT',
    EFFECT: 'EFFECT',
    EXPRESSION: 'EXPRESSION',
    HEAL: 'HEAL',
    ITEM: 'ITEM',
    NC: 'NC',
    OTHER: 'OTHER',
    PASSIVE: 'PASSIVE',
    SELF: 'SELF',
    SONG: 'SONG',
    WALK: 'WALK'
};
exports.enumSkillModifiersOrderBy = {
    NATURAL: 'NATURAL',
    SKILL_ASC: 'SKILL_ASC',
    SKILL_DESC: 'SKILL_DESC',
    MODIFIERS_ASC: 'MODIFIERS_ASC',
    MODIFIERS_DESC: 'MODIFIERS_DESC',
    PRIMARY_KEY_ASC: 'PRIMARY_KEY_ASC',
    PRIMARY_KEY_DESC: 'PRIMARY_KEY_DESC'
};
exports.enumSkillsOrderBy = {
    NATURAL: 'NATURAL',
    ID_ASC: 'ID_ASC',
    ID_DESC: 'ID_DESC',
    NAME_ASC: 'NAME_ASC',
    NAME_DESC: 'NAME_DESC',
    IMAGE_ASC: 'IMAGE_ASC',
    IMAGE_DESC: 'IMAGE_DESC',
    TAGS_ASC: 'TAGS_ASC',
    TAGS_DESC: 'TAGS_DESC',
    MP_COST_ASC: 'MP_COST_ASC',
    MP_COST_DESC: 'MP_COST_DESC',
    DURATION_ASC: 'DURATION_ASC',
    DURATION_DESC: 'DURATION_DESC',
    GUILD_LEVEL_ASC: 'GUILD_LEVEL_ASC',
    GUILD_LEVEL_DESC: 'GUILD_LEVEL_DESC',
    MAX_LEVEL_ASC: 'MAX_LEVEL_ASC',
    MAX_LEVEL_DESC: 'MAX_LEVEL_DESC',
    PERMABLE_ASC: 'PERMABLE_ASC',
    PERMABLE_DESC: 'PERMABLE_DESC',
    AMBIGUOUS_ASC: 'AMBIGUOUS_ASC',
    AMBIGUOUS_DESC: 'AMBIGUOUS_DESC',
    PRIMARY_KEY_ASC: 'PRIMARY_KEY_ASC',
    PRIMARY_KEY_DESC: 'PRIMARY_KEY_DESC'
};
