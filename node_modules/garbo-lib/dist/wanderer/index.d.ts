import { Item, Location } from "kolmafia";
import { DraggableFight, WandererFactoryOptions } from "./lib";
export type { DraggableFight };
export type WanderOptions = {
    wanderer: DraggableFight;
    drunkSafe?: boolean;
    allowEquipment?: boolean;
};
export type WanderDetails = DraggableFight | WanderOptions;
export declare class WandererManager {
    quartetChoice: number;
    unsupportedChoices: Map<Location, {
        [choice: number]: string | number;
    }>;
    equipment: Map<Location, Item[]>;
    cacheKey: string;
    targets: Partial<{
        [x in `${DraggableFight}:${boolean}`]: Location;
    }>;
    options: WandererFactoryOptions;
    constructor(options: WandererFactoryOptions);
    getTarget(wanderer: WanderDetails): Location;
    getChoices(wanderer: WanderDetails): {
        [choice: number]: string | number;
    };
    clear(): void;
    getEquipment(wanderer: WanderDetails): Item[];
}
