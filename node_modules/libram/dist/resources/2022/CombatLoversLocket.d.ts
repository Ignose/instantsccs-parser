import { Monster } from "kolmafia";
import { CombatParams } from "../../lib.js";
/**
 * @returns Whether you `have` the Combat Lover's Locket
 */
export declare function have(): boolean;
/**
 * Filters the set of all unlocked locket monsters to only the ones available to be locketed right now.
 *
 * @returns An array consisting of all Monsters you can fight with your locket right now.
 */
export declare function availableLocketMonsters(): Monster[];
/**
 * Parses getLocketMonsters and returns the collection of all Monsters as an Array.
 *
 * @returns An array consisting of all Monsters you can hypothetically fight, regardless of whether they've been fought today.
 */
export declare function unlockedLocketMonsters(): Monster[];
/**
 * Determines how many reminisces remain by parsing the _locketMonstersFought property.
 *
 * @returns The number of reminisces a player has available; 0 if they lack the Locket.
 */
export declare function reminiscesLeft(): number;
/**
 * Determines which monsters were reminisced today by parsing the _locketMonstersFought property.
 *
 * @returns An array consisting of the Monsters reminisced today.
 */
export declare function monstersReminisced(): Monster[];
/**
 * Fight a Monster using the Combat Lover's Locket
 *
 * @param monster The Monster to fight
 * @param combatParams Any parameters you'd like to pass to `runCombat`
 * @returns false if we are unable to reminisce about this monster. Else, returns whether, at the end of all things, we have reminisced about this monster.
 */
export declare function reminisce(monster: Monster, ...combatParams: CombatParams): boolean;
/**
 * This function efficiently evaluates all of an adventurer's possibly reminiscable monsters, placing them through a filtering criteria and evaluating them based on a passed function.
 *
 * @param criteria A filtering function for delineating which monsters are "fair game" for the search, such as "is this monster free".
 * @param value A function for deciding which monsters are "better" than others.
 * @returns A singular monster that fulfills the criteria function and maximizes the value function.
 */
export declare function findMonster(criteria: (monster: Monster) => boolean, value?: (monster: Monster) => number): Monster | null;
/**
 * Determine if a monster is currently reminiscible/reminiscable.
 * @param monster The monster in question
 * @returns Whether we can currently reminisce that monster
 */
export declare function canReminisce(monster: Monster): boolean;
