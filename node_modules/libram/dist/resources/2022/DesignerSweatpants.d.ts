import { Skill } from "kolmafia";
/** designer sweatpants sweat skills */
export declare const skills: {
    readonly SweatFlick: Skill;
    readonly SweatSpray: Skill;
    readonly SweatFlood: Skill;
    readonly SipSomeSweat: Skill;
    readonly SweatSip: Skill;
    readonly DrenchYourselfInSweat: Skill;
    readonly SweatOutSomeBooze: Skill;
    readonly MakeSweatAde: Skill;
};
/**
 * Do you own designer sweatpants
 * @returns Whether you have the designer sweatpants
 */
export declare function have(): boolean;
/**
 * Get the current sweat amount
 * @returns The amount of sweat
 */
export declare function sweat(): number;
/**
 * Refresh the current sweat amount by visiting the item description
 */
export declare function refresh(): void;
/**
 * Get the sweat cost of a skill
 * @param skill The skill to check
 * @returns The sweat cost, or Infinty for an invalid skill
 */
export declare function sweatCost(skill: Skill): number;
/**
 * Check if a sweat skill can be cast
 * @param skill The skill to check
 * @returns If this skill can be cast
 */
export declare function canUseSkill(skill: Skill): boolean;
/**
 * Get the available number of times a sweat skill can be cast with current sweat
 * @param skill The skill to check
 * @returns The available number of casts
 */
export declare function availableCasts(skill: Skill): number;
/**
 * Get the potential number of times a sweat skill can be cast, with maximum sweat
 * @param skill The skill to check
 * @returns The potential number of casts
 */
export declare function potentialCasts(skill: Skill): number;
/**
 * Cast a sweat skill, on failure refresh sweat amount
 * @param skill The skill to cast
 * @returns If this skill was cast successfully
 */
export declare function useSkill(skill: Skill): boolean;
