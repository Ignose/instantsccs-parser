import { Location } from "kolmafia";
import { Requirement } from "../../maximize.js";
declare class ConspiracyQuest {
    prop: string;
    reward: number;
    complete: number;
    /** Location in which quest is completed */
    location: Location;
    /** Requirements to complete quest */
    requirements: Requirement;
    constructor(prop: string, reward: number, complete: number, location: Location, requirements?: Requirement);
    isOneTime(): boolean;
    isStarted(): boolean;
    isFinished(): boolean;
    isActive(): boolean;
    isReadyToTurnIn(): boolean;
}
export declare const QUESTS: readonly [ConspiracyQuest, ConspiracyQuest, ConspiracyQuest, ConspiracyQuest, ConspiracyQuest, ConspiracyQuest, ConspiracyQuest, ConspiracyQuest];
/**
 * @returns Whether all one-time quests are completed
 */
export declare function completedOneTimeQuests(): boolean;
/**
 * Activate a protocol in the bunker
 * @param protocol Protocol to activate
 */
export declare function activateProtocol(protocol: number): void;
/**
 * @returns Current omega charge level
 */
export declare function getOmega(): number;
/**
 * Activate Omega Protocol
 * @param completeAllQuests Abort if player has not completed all one-time quests
 */
export declare function activateOmega(completeAllQuests?: boolean): void;
/**
 * @param accept Whether to accept a quest if one is not currently active
 * @returns Returns the current quest or null if no quest is active
 */
export declare function getQuest(accept?: boolean): ConspiracyQuest | null;
/**
 * Turn in the current quest
 * @returns Success of turning in the quest
 */
export declare function turnInQuest(): boolean;
export {};
