import { Item } from "kolmafia";
/**
 * @returns Do we `have` the Pantogram itself?
 */
export declare function have(): boolean;
/**
 * @returns Do we `have` pantogram pants?
 */
export declare function havePants(): boolean;
type PantogramAlignment = "Muscle" | "Moxie" | "Mysticality";
declare const Element: {
    "Hot Resistance: 2": number;
    "Cold Resistance: 2": number;
    "Spooky Resistance: 2": number;
    "Sleaze Resistance: 2": number;
    "Stench Resistance: 2": number;
};
type PantogramElement = keyof typeof Element;
declare const LeftSacrifice: {
    "Maximum HP: 40": number[];
    "Maximum MP: 20": number[];
    "HP Regen Max: 10": (number | Item)[];
    "HP Regen Max: 15": (number | Item)[];
    "HP Regen Max: 20": (number | Item)[];
    "MP Regen Max: 10": (number | Item)[];
    "MP Regen Max: 15": (number | Item)[];
    "MP Regen Max: 20": (number | Item)[];
    "Mana Cost: -3": (number | Item)[];
};
type PantogramSacrificeL = keyof typeof LeftSacrifice;
declare const MiddleSacrifice: {
    "Combat Rate: -5": number[];
    "Combat Rate: 5": number[];
    "Critical Hit Percent: 10": (number | Item)[];
    "Initiative: 50": (number | Item)[];
    "Familiar Weight: 10": (number | Item)[];
    "Candy Drop: 100": (number | Item)[];
    "Item Drop Penalty: -10": (number | Item)[];
    "Fishing Skill: 5": (number | Item)[];
    "Pool Skill: 5": (number | Item)[];
    "Avatar: Purple": (number | Item)[];
    "Drops Items: true": (number | Item)[];
};
type PantogramSacrificeM = keyof typeof MiddleSacrifice;
declare const RightSacrifice: {
    "Weapon Damage: 20": number[];
    "Spell Damage Percent: 20": number[];
    "Meat Drop: 30": (number | Item)[];
    "Meat Drop: 60": (number | Item)[];
    "Item Drop: 15": (number | Item)[];
    "Item Drop: 30": (number | Item)[];
    "Muscle Experience: 3": (number | Item)[];
    "Mysticality Experience: 3": (number | Item)[];
    "Moxie Experience: 3": (number | Item)[];
    "Muscle Experience Percent: 25": (number | Item)[];
    "Mysticality Experience Percent: 25": (number | Item)[];
    "Moxie Experience Percent: 25": (number | Item)[];
};
type PantogramSacrificeR = keyof typeof RightSacrifice;
type Pants = {
    alignment: PantogramAlignment;
    element: PantogramElement;
    leftSac: PantogramSacrificeL;
    rightSac: PantogramSacrificeR;
    middleSac: PantogramSacrificeM;
};
/**
 * Finds the item requirements for a particular pair of pants.
 *
 * @param modifiers An object consisting of the modifiers you want on your pants. For modifiers repeated across a particular sacrifice, use a tuple of that modifier and its value.
 * @returns A map of the items you need to make these pants and the quantities needed.
 */
export declare function findRequirements(modifiers: Partial<Pants>): Map<Item, number>;
/**
 * Makes a pair of pants with the given modifiers
 *
 * @param alignment The stat you'd like your pants to improve. Moxie, Mysticality, or Muscle
 * @param element The element you'd like your pants to provide resistance for
 * @param leftSac The modifier you'd like to get from your leftmost sacrifice in Pantagramming.
 * @param middleSac The modifier you'd like to get from your middle sacrifice in Pantagramming.
 * @param rightSac The modifier you'd like to get from your rightmost sacrifice in Pantagramming.
 * @returns Whether or not you successfully created a pair of pants. False if you don't own the pantogram or if you already have pantogram pants.
 */
export declare function makePants(alignment: PantogramAlignment, element: PantogramElement, leftSac: PantogramSacrificeL, middleSac: PantogramSacrificeM, rightSac: PantogramSacrificeR): boolean;
/**
 * Creates a pair of pants from a Pants object.
 *
 * @param pants An object consisting of the modifiers you'd like the pants to give you.
 * @returns Whether or not you successfully created a pair of pants. False if you don't own the pantogram or if you already have pantogram pants.
 */
export declare function makePantsFromObject(pants: Pants): boolean;
export {};
