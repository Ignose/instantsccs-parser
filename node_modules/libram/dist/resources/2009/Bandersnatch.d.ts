import { Effect } from "kolmafia";
/**
 * Determines whether the player has the Frumious Bandersnatch in their
 * terrarium
 *
 * @returns Whether the player has a Frumious Bandersnatch
 */
export declare function have(): boolean;
/**
 * Get the number of free runaways that have already been used
 *
 * @see StompingBoots with which the Bandersnatch shares a counter
 * @returns Number of free runaways used today
 */
export declare function getRunaways(): number;
/**
 * Determine the total number of free runaways that the player can
 * get from their Bandersnatch
 *
 * @param considerWeightAdjustment Include familiar weight modifiers
 * @returns Current maximum runaways
 */
export declare function getMaxRunaways(considerWeightAdjustment?: boolean): number;
/**
 * Determine the number of remaining free runaways the player can
 * get from their Bandersnatch
 *
 * @param considerWeightAdjustment Include familiar weight modifiers
 * @returns Current maximum runaways reamining
 */
export declare function getRemainingRunaways(considerWeightAdjustment?: boolean): number;
/**
 * Determine whether the player could use their Bandersnatch to
 * get a free run in theory
 *
 * @param considerWeightAdjustment Include familiar weight modifiers
 * @returns Whether a free run is theoretically possible right now
 */
export declare function couldRunaway(considerWeightAdjustment?: boolean): boolean;
/**
 * Determine whether the player can use their Bandersnatch to get a
 * free run right now
 *
 * @returns Whether a free run is actually possible right now
 */
export declare function canRunaway(): boolean;
/**
 * Prepare a Bandersnatch runaway.
 *
 * This will cast Ode to Booze and take your Bandersnatch with you.
 * If any of those steps fail, it will return false.
 *
 * @param songsToRemove Ordered list of songs that could be shrugged to make room for Ode to Booze
 * @returns Success
 */
export declare function prepareRunaway(songsToRemove: Effect[]): boolean;
