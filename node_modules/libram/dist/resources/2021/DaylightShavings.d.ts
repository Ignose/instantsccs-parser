import { Effect } from "kolmafia";
import { Tuple } from "../../utils.js";
/**
 * Returns whether the player owns an unpackaged Daylight Shavings Helmet, and it's available in either the inventory or other zones as determined by autoSatisfy settings.
 *
 * @returns whether we have the Daylight Shavings Helmet.
 */
export declare function have(): boolean;
export declare const buffs: Effect[];
/**
 * Tells you whether you currently have a beardbuff active. Warning: because of spaghetti, this does not determine buff eligibility.
 *
 * @returns Whether you currently have a beardbuff active
 */
export declare function hasBuff(): boolean;
/**
 * Checks to see if there are any beardbuffs you have more than 1 turn of, determining whether you are eligible to receive a buff post-combat.
 *
 * @returns Whether you current are able to get a buff from the Daylight Shaving Helmet.
 */
export declare function buffAvailable(): boolean;
/**
 * Calculates and returns the cycle of buffs that the hat should cycle through.
 *
 * @param playerclass The class to generate a cycle for
 * @returns An ordered 11-tuple consisting of the cycle for this class. The first element of the array will be the first buff a player should expect to get in a given ascension.
 */
export declare function buffCycle(playerclass?: import("kolmafia").Class): Tuple<Effect, 11>;
/**
 * Returns the next buff we expect to get from the shaving hat.
 *
 * @returns The next buff we expect to get from the shaving hat.
 */
export declare function nextBuff(): Effect;
/**
 * Returns the number of buffs we expect it'll take to get to a given buff. Returns 1 for the next buff, 2 for the one after that, and so on. Returns 11 for the most recent buff.
 *
 * @param buff The shaving buff in question
 * @returns The number of buffs we expect it'll take to get to the inputted buff; null if said buff is not granted by the shaving hat.
 */
export declare function buffsUntil(buff: Effect): number | null;
