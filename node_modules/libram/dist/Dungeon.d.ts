import { Item } from "kolmafia";
export declare class Dungeon {
    private name_;
    private loot;
    private openAction;
    private closeAction;
    private openCost;
    private openImage;
    private closedImage;
    get possibleLoot(): Item[];
    get name(): string;
    /**
     * Creates dungeon object for managing clan dungeons
     *
     * @param name_ name_ of the dungeon in question
     * @param loot Distributable loot dropped by bosses in dungeon
     * @param openAction String action used in form submission to open dungeon
     * @param closeAction String action used in form submission to close dungeon
     * @param openCost Meat cost of opening dungeon
     * @param openImage Image text to search clan_basement.php for to check if dungeon is open
     * @param closedImage Image text to search clan_basement.php for to check if dungeon is closed
     */
    constructor(name_: string, loot: Item[], openAction: string, closeAction: string, openCost: number, openImage: string, closedImage: string);
    distribute(idOrname_: number | string, loot?: Item | Item[] | Map<Item, number>, distributeAllOfAGivenItem?: boolean): void;
    /**
     * Close this dungeon
     *
     * @returns Whether the dungeon is now closed
     */
    close(): boolean;
    /**
     * Open an instance of this dungeon
     *
     * @param paymentPolicy How much meat should we put into the clan stash to open this dungeon?
     * @returns Whether the dungeon is now open
     */
    open(paymentPolicy?: "None" | "All" | "Difference"): boolean;
    /**
     * @returns A counted map of all loot from this dungeon eligible for distribution
     */
    findLoot(): Map<Item, number>;
}
export declare const Dreadsylvania: Dungeon;
export declare const Hobopolis: Dungeon;
export declare const SlimeTube: Dungeon;
