import { get } from "libram";
export class Guards {
    /**
     * A guard that computes a value before the task executes which is available
     * for the condition checker.
     * @param before
     * @param after
     */
    static create(before, after) {
        return () => {
            const old = before();
            return () => after(old);
        };
    }
    /**
     * A guard that asserts a condition holds after the task executes.
     * @param condition A condition that should return true if the task
     *    sucessfully executed.
     */
    static after(condition) {
        return () => condition;
    }
    /**
     * A guard that asserts the provided property changed.
     * @param property The property to check.
     */
    static changed(property) {
        return this.create(() => get(property), (old) => get(property) !== old);
    }
}
